# -*- cmake -*-
# Copyright 2021 Jean Pierre Cimalando
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

find_package(Threads REQUIRED)

if(NOT YSFX_PORTABLE AND MSVC AND MSVC_C_ARCHITECTURE_ID STREQUAL "x64")
    find_program(NASM_PROGRAM "nasm")
    if(NOT NASM_PROGRAM)
        message(FATAL_ERROR "Cannot find nasm")
    endif()
endif()

# ysfx::wdl-base
# ------------------------------------------------------------------------------
add_library(wdl-base STATIC "thirdparty/WDL/source/WDL/fft.c")
if(WIN32)
    target_sources(wdl-base PRIVATE "thirdparty/WDL/source/WDL/win32_utf8.c")
endif()
target_compile_definitions(wdl-base PUBLIC "WDL_FFT_REALSIZE=8")
if(NOT WIN32)
    target_compile_definitions(wdl-base PRIVATE "_FILE_OFFSET_BITS=64")
endif()
if(MSVC)
    target_compile_definitions(wdl-base PRIVATE "_CRT_NONSTDC_NO_WARNINGS")
endif()
target_include_directories(wdl-base PUBLIC "thirdparty/WDL/source")
add_library(ysfx::wdl-base ALIAS wdl-base)

# ysfx::eel2
# ------------------------------------------------------------------------------
add_library(eel2
    STATIC
        "thirdparty/WDL/source/WDL/eel2/nseel-caltab.c"
        "thirdparty/WDL/source/WDL/eel2/nseel-cfunc.c"
        "thirdparty/WDL/source/WDL/eel2/nseel-compiler.c"
        "thirdparty/WDL/source/WDL/eel2/nseel-eval.c"
        "thirdparty/WDL/source/WDL/eel2/nseel-lextab.c"
        "thirdparty/WDL/source/WDL/eel2/nseel-ram.c"
        "thirdparty/WDL/source/WDL/eel2/nseel-yylex.c")
if(YSFX_PORTABLE)
    target_compile_definitions(eel2 PUBLIC "EEL_TARGET_PORTABLE")
else()
    if(NOT MSVC)
        target_sources(eel2 PRIVATE "sources/eel2-gas/sources/asm-nseel-x64-sse.S")
    elseif(MSVC_C_ARCHITECTURE_ID STREQUAL "x64")
        target_sources(eel2 PRIVATE "asm-nseel-x64-sse.obj")
        add_custom_command(
            OUTPUT "asm-nseel-x64-sse.obj"
            COMMAND "${NASM_PROGRAM}" "-f" "win64" "-o" "${CMAKE_CURRENT_BINARY_DIR}/asm-nseel-x64-sse.obj" "${CMAKE_CURRENT_SOURCE_DIR}/thirdparty/WDL/source/WDL/eel2/asm-nseel-x64-sse.asm"
            DEPENDS "thirdparty/WDL/source/WDL/eel2/asm-nseel-x64-sse.asm")
    endif()
endif()
target_compile_definitions(eel2
    PUBLIC
        "EELSCRIPT_NO_NET"
        "EELSCRIPT_NO_LICE"
    PRIVATE
        "NSEEL_ATOF=nseel_atof")
if(NOT WIN32)
    target_compile_definitions(eel2 PRIVATE "_FILE_OFFSET_BITS=64")
endif()
if(MSVC)
    target_compile_definitions(eel2 PRIVATE "_CRT_NONSTDC_NO_WARNINGS")
endif()
target_link_libraries(eel2
    PUBLIC
        ysfx::wdl-base
    PRIVATE
        Threads::Threads)
add_library(ysfx::eel2 ALIAS eel2)

if(NOT YSFX_SKIP_CHECKSUM)
    # Verify if the reference ASM file has been modified.
    # It tells that the GAS source requires updating to match upstream.
    add_custom_command(
        OUTPUT
            "eel2-gas-validate-stamp.txt"
        COMMAND
            "${CMAKE_COMMAND}"
            "-DSOURCE_FILE=${CMAKE_SOURCE_DIR}/thirdparty/WDL/source/WDL/eel2/asm-nseel-x64-sse.asm"
            "-DCHECKSUM_FILE=${CMAKE_SOURCE_DIR}/sources/eel2-gas/sources/ref-hash-sha512.txt"
            "-DTEXT_MODE=ON"
            "-P" "${PROJECT_SOURCE_DIR}/cmake/ValidateSHA512.cmake"
        COMMAND
            "${CMAKE_COMMAND}" "-E" "touch" "${CMAKE_CURRENT_BINARY_DIR}/eel2-gas-validate-stamp.txt"
        DEPENDS
            "thirdparty/WDL/source/WDL/eel2/asm-nseel-x64-sse.asm"
            "sources/eel2-gas/sources/ref-hash-sha512.txt")
    add_custom_target(eel2-gas-validate DEPENDS "eel2-gas-validate-stamp.txt")
    add_dependencies(eel2 eel2-gas-validate)
endif()
