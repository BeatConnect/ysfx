# -*- cmake -*-
# Copyright 2021 Jean Pierre Cimalando
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

# ysfx-private
#    A ysfx target which gives access to the internals.
#    This target is adequate for unit-testing.
# ------------------------------------------------------------------------------
add_library(ysfx-private
    OBJECT
        "sources/ysfx.cpp"
        "sources/ysfx.hpp"
        "sources/ysfx_config.cpp"
        "sources/ysfx_config.hpp"
        "sources/ysfx_midi.cpp"
        "sources/ysfx_midi.hpp"
        "sources/ysfx_reader.cpp"
        "sources/ysfx_reader.hpp"
        "sources/ysfx_parse.cpp"
        "sources/ysfx_parse.hpp"
        "sources/ysfx_audio_wav.cpp"
        "sources/ysfx_audio_wav.hpp"
        "sources/ysfx_audio_flac.cpp"
        "sources/ysfx_audio_flac.hpp"
        "sources/ysfx_utils.cpp"
        "sources/ysfx_utils.hpp"
        "sources/ysfx_api_eel.cpp"
        "sources/ysfx_api_eel.hpp"
        "sources/ysfx_api_reaper.cpp"
        "sources/ysfx_api_reaper.hpp"
        "sources/ysfx_api_file.cpp"
        "sources/ysfx_api_file.hpp"
        "sources/ysfx_api_gfx.cpp"
        "sources/ysfx_api_gfx.hpp"
        "sources/ysfx_api_gfx_dummy.hpp"
        "sources/ysfx_api_gfx_lice.hpp"
        "sources/ysfx_eel_utils.cpp"
        "sources/ysfx_eel_utils.hpp")
target_compile_definitions(ysfx-private
    PRIVATE
        "_FILE_OFFSET_BITS=64")
if(MSVC)
    target_compile_definitions(ysfx-private
        PRIVATE
            "_CRT_NONSTDC_NO_WARNINGS")
endif()
if(WIN32)
    target_compile_definitions(ysfx-private
        PRIVATE
            "NOMINMAX")
endif()
target_include_directories(ysfx-private
    PUBLIC
        "include"
        "sources")
target_link_libraries(ysfx-private
    PUBLIC
        eel2
        eel2nasm
        wdl-base
        dr_libs)

if(YSFX_GFX)
    target_link_libraries(ysfx-private PUBLIC lice)
else()
    target_compile_definitions(ysfx-private PUBLIC "YSFX_NO_GFX")
endif()

# ysfx::ysfx
#    A ysfx target which gives access to the public interface.
#    This target is adequate for normal use.
# ------------------------------------------------------------------------------
add_library(ysfx STATIC)
target_include_directories(ysfx PUBLIC "include")
target_link_libraries(ysfx PRIVATE
    ysfx-private
    eel2
    eel2nasm
    wdl-base)
if(YSFX_GFX)
    target_link_libraries(ysfx PUBLIC lice)
endif()
add_library(ysfx::ysfx ALIAS ysfx)
